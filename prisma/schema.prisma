// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id_user       String    @id @default(uuid()) 
  user_name     String
  user_birthday DateTime
  user_email    String    @unique
  user_password String
  user_profile  String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  role_id       String
  role          Role      @relation(fields: [role_id], references: [id_role])
  reports       Report[]
  comments      Comment[] 
}

model Role {
  id_role   String @id @default(uuid())
  role_name String @unique   
  users     User[]  
}

enum ReportStatus {
  PENDING
  DIPROSES
  SELESAI
}

model Report {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  location    String
  imageUrl    String?
  status      ReportStatus @default(PENDING)
  userId      String
  user        User         @relation(fields: [userId], references: [id_user])
  comments    Comment[]
  createdAt   DateTime     @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  imageUrl  String?
  reportId  Int
  userId    String
  user      User     @relation(fields: [userId], references: [id_user])
  report    Report   @relation(fields: [reportId], references: [id], onDelete: Cascade) 
  createdAt DateTime @default(now())
}